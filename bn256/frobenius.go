// Copyright 2020 ConsenSys AG
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by gurvy/internal/generators DO NOT EDIT

package bn256

import "github.com/consensys/gurvy/bn256/fp"

// Frobenius set z to Frobenius(x) in PairingResult and return z
func (z *PairingResult) Frobenius(x *PairingResult) *PairingResult {
	// Algorithm 28 from https://eprint.iacr.org/2010/354.pdf (beware typos!)
	var t [6]E2

	// Frobenius acts on fp2 by conjugation
	t[0].Conjugate(&x.C0.B0)
	t[1].Conjugate(&x.C0.B1)
	t[2].Conjugate(&x.C0.B2)
	t[3].Conjugate(&x.C1.B0)
	t[4].Conjugate(&x.C1.B1)
	t[5].Conjugate(&x.C1.B2)

	t[1].MulByNonResiduePower2(&t[1])
	t[2].MulByNonResiduePower4(&t[2])
	t[3].MulByNonResiduePower1(&t[3])
	t[4].MulByNonResiduePower3(&t[4])
	t[5].MulByNonResiduePower5(&t[5])

	z.C0.B0 = t[0]
	z.C0.B1 = t[1]
	z.C0.B2 = t[2]
	z.C1.B0 = t[3]
	z.C1.B1 = t[4]
	z.C1.B2 = t[5]

	return z
}

// FrobeniusSquare set z to Frobenius^2(x) in PairingResult and return z
func (z *PairingResult) FrobeniusSquare(x *PairingResult) *PairingResult {
	// Algorithm 29 from https://eprint.iacr.org/2010/354.pdf (beware typos!)
	var t [6]E2

	t[1].MulByNonResiduePowerSquare2(&x.C0.B1)
	t[2].MulByNonResiduePowerSquare4(&x.C0.B2)
	t[3].MulByNonResiduePowerSquare1(&x.C1.B0)
	t[4].MulByNonResiduePowerSquare3(&x.C1.B1)
	t[5].MulByNonResiduePowerSquare5(&x.C1.B2)

	z.C0.B0 = x.C0.B0
	z.C0.B1 = t[1]
	z.C0.B2 = t[2]
	z.C1.B0 = t[3]
	z.C1.B1 = t[4]
	z.C1.B2 = t[5]

	return z
}

// FrobeniusCube set z to Frobenius^3(x) in PairingResult and return z
func (z *PairingResult) FrobeniusCube(x *PairingResult) *PairingResult {
	// Algorithm 30 from https://eprint.iacr.org/2010/354.pdf (beware typos!)
	var t [6]E2

	// Frobenius^3 acts on fp2 by conjugation
	t[0].Conjugate(&x.C0.B0)
	t[1].Conjugate(&x.C0.B1)
	t[2].Conjugate(&x.C0.B2)
	t[3].Conjugate(&x.C1.B0)
	t[4].Conjugate(&x.C1.B1)
	t[5].Conjugate(&x.C1.B2)

	t[1].MulByNonResiduePowerCube2(&t[1])
	t[2].MulByNonResiduePowerCube4(&t[2])
	t[3].MulByNonResiduePowerCube1(&t[3])
	t[4].MulByNonResiduePowerCube3(&t[4])
	t[5].MulByNonResiduePowerCube5(&t[5])

	z.C0.B0 = t[0]
	z.C0.B1 = t[1]
	z.C0.B2 = t[2]
	z.C1.B0 = t[3]
	z.C1.B1 = t[4]
	z.C1.B2 = t[5]

	return z
}

// MulByNonResiduePower1 set z=x*(9,1)^(1*(p-1)/6) and return z
func (z *E2) MulByNonResiduePower1(x *E2) *E2 {
	// (9,1)^(1*(p-1)/6)
	// 3850754370037169011952147076051364057158807420970682438676050522613628423219637725072182697113062777891589506424760 + u*151655185184498381465642749684540099398075398968325446656007613510403227271200139370504932015952886146304766135027
	b := E2{
		A0: fp.Element{
			12653890742059813127,
			14585784200204367754,
			1278438861261381767,
			212598772761311868,
		},
		A1: fp.Element{
			11683091849979440498,
			14992204589386555739,
			15866167890766973222,
			1200023580730561873,
		},
	}
	z.Mul(x, &b)
	return z
}

// MulByNonResiduePower2 set z=x*(9,1)^(2*(p-1)/6) and return z
func (z *E2) MulByNonResiduePower2(x *E2) *E2 {
	// (9,1)^(2*(p-1)/6)
	// 0 + u*4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436
	b := E2{
		A0: fp.Element{
			13075984984163199792,
			3782902503040509012,
			8791150885551868305,
			1825854335138010348,
		},
		A1: fp.Element{
			7963664994991228759,
			12257807996192067905,
			13179524609921305146,
			2767831111890561987,
		},
	}
	z.Mul(x, &b)
	return z
}

// MulByNonResiduePower3 set z=x*(9,1)^(3*(p-1)/6) and return z
func (z *E2) MulByNonResiduePower3(x *E2) *E2 {
	// (9,1)^(3*(p-1)/6)
	// 1028732146235106349975324479215795277384839936929757896155643118032610843298655225875571310552543014690878354869257 + u*1028732146235106349975324479215795277384839936929757896155643118032610843298655225875571310552543014690878354869257
	b := E2{
		A0: fp.Element{
			16482010305593259561,
			13488546290961988299,
			3578621962720924518,
			2681173117283399901,
		},
		A1: fp.Element{
			11661927080404088775,
			553939530661941723,
			7860678177968807019,
			3208568454732775116,
		},
	}
	z.Mul(x, &b)
	return z
}

// MulByNonResiduePower4 set z=x*(9,1)^(4*(p-1)/6) and return z
func (z *E2) MulByNonResiduePower4(x *E2) *E2 {
	// (9,1)^(4*(p-1)/6)
	// 4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939437
	b := E2{
		A0: fp.Element{
			8314163329781907090,
			11942187022798819835,
			11282677263046157209,
			1576150870752482284,
		},
		A1: fp.Element{
			6763840483288992073,
			7118829427391486816,
			4016233444936635065,
			2630958277570195709,
		},
	}
	z.Mul(x, &b)
	return z
}

// MulByNonResiduePower5 set z=x*(9,1)^(5*(p-1)/6) and return z
func (z *E2) MulByNonResiduePower5(x *E2) *E2 {
	// (9,1)^(5*(p-1)/6)
	// 877076961050607968509681729531255177986764537961432449499635504522207616027455086505066378536590128544573588734230 + u*3125332594171059424908108096204648978570118281977575435832422631601824034463382777937621250592425535493320683825557
	b := E2{
		A0: fp.Element{
			14515217250696892391,
			16303087968080972555,
			3656613296917993960,
			1345095164996126785,
		},
		A1: fp.Element{
			957117326806663081,
			367382125163301975,
			15253872307375509749,
			3396254757538665050,
		},
	}
	z.Mul(x, &b)
	return z
}

// MulByNonResiduePowerSquare1 set z=x*(9,1)^(1*(p^2-1)/6) and return z
func (z *E2) MulByNonResiduePowerSquare1(x *E2) *E2 {
	// (9,1)^(1*(p^2-1)/6)
	// 793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620351
	b := fp.Element{
		14595462726357228530,
		17349508522658994025,
		1017833795229664280,
		299787779797702374,
	}
	z.A0.Mul(&x.A0, &b)
	z.A1.Mul(&x.A1, &b)
	return z
}

// MulByNonResiduePowerSquare2 set z=x*(9,1)^(2*(p^2-1)/6) and return z
func (z *E2) MulByNonResiduePowerSquare2(x *E2) *E2 {
	// (9,1)^(2*(p^2-1)/6)
	// 793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350
	b := fp.Element{
		3697675806616062876,
		9065277094688085689,
		6918009208039626314,
		2775033306905974752,
	}
	z.A0.Mul(&x.A0, &b)
	z.A1.Mul(&x.A1, &b)
	return z
}

// MulByNonResiduePowerSquare3 set z=x*(9,1)^(3*(p^2-1)/6) and return z
func (z *E2) MulByNonResiduePowerSquare3(x *E2) *E2 {
	// (9,1)^(3*(p^2-1)/6)
	// 4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786
	b := fp.Element{
		7548957153968385962,
		10162512645738643279,
		5900175412809962033,
		2475245527108272378,
	}
	z.A0.Mul(&x.A0, &b)
	z.A1.Mul(&x.A1, &b)
	return z
}

// MulByNonResiduePowerSquare4 set z=x*(9,1)^(4*(p^2-1)/6) and return z
func (z *E2) MulByNonResiduePowerSquare4(x *E2) *E2 {
	// (9,1)^(4*(p^2-1)/6)
	// 4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436
	b := fp.Element{
		8183898218631979349,
		12014359695528440611,
		12263358156045030468,
		3187210487005268291,
	}
	z.A0.Mul(&x.A0, &b)
	z.A1.Mul(&x.A1, &b)
	return z
}

// MulByNonResiduePowerSquare5 set z=x*(9,1)^(5*(p^2-1)/6) and return z
func (z *E2) MulByNonResiduePowerSquare5(x *E2) *E2 {
	// (9,1)^(5*(p^2-1)/6)
	// 4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939437
	b := fp.Element{
		634941064663593387,
		1851847049789797332,
		6363182743235068435,
		711964959896995913,
	}
	z.A0.Mul(&x.A0, &b)
	z.A1.Mul(&x.A1, &b)
	return z
}

// MulByNonResiduePowerCube1 set z=x*(9,1)^(1*(p^3-1)/6) and return z
func (z *E2) MulByNonResiduePowerCube1(x *E2) *E2 {
	// (9,1)^(1*(p^3-1)/6)
	// 2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530 + u*1028732146235106349975324479215795277384839936929757896155643118032610843298655225875571310552543014690878354869257
	b := E2{
		A0: fp.Element{
			3914496794763385213,
			790120733010914719,
			7322192392869644725,
			581366264293887267,
		},
		A1: fp.Element{
			12817045492518885689,
			4440270538777280383,
			11178533038884588256,
			2767537931541304486,
		},
	}
	z.Mul(x, &b)
	return z
}

// MulByNonResiduePowerCube2 set z=x*(9,1)^(2*(p^3-1)/6) and return z
func (z *E2) MulByNonResiduePowerCube2(x *E2) *E2 {
	// (9,1)^(2*(p^3-1)/6)
	// 0 + u*1
	b := E2{
		A0: fp.Element{
			14532872967180610477,
			12903226530429559474,
			1868623743233345524,
			2316889217940299650,
		},
		A1: fp.Element{
			12447993766991532972,
			4121872836076202828,
			7630813605053367399,
			740282956577754197,
		},
	}
	z.Mul(x, &b)
	return z
}

// MulByNonResiduePowerCube3 set z=x*(9,1)^(3*(p^3-1)/6) and return z
func (z *E2) MulByNonResiduePowerCube3(x *E2) *E2 {
	// (9,1)^(3*(p^3-1)/6)
	// 2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530 + u*2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530
	b := E2{
		A0: fp.Element{
			6297350639395948318,
			15875321927225446337,
			9702569988553770230,
			805825149519570764,
		},
		A1: fp.Element{
			11117433864585119104,
			10363184613815941297,
			5420513773305887730,
			278429812070195549,
		},
	}
	z.Mul(x, &b)
	return z
}

// MulByNonResiduePowerCube4 set z=x*(9,1)^(4*(p^3-1)/6) and return z
func (z *E2) MulByNonResiduePowerCube4(x *E2) *E2 {
	// (9,1)^(4*(p^3-1)/6)
	// 4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786
	b := E2{
		A0: fp.Element{
			4938922280314430175,
			13823286637238282975,
			15589480384090068090,
			481952561930628184,
		},
		A1: fp.Element{
			3105754162722846417,
			11647802298615474591,
			13057042392041828081,
			1660844386505564338,
		},
	}
	z.Mul(x, &b)
	return z
}

// MulByNonResiduePowerCube5 set z=x*(9,1)^(5*(p^3-1)/6) and return z
func (z *E2) MulByNonResiduePowerCube5(x *E2) *E2 {
	// (9,1)^(5*(p^3-1)/6)
	// 1028732146235106349975324479215795277384839936929757896155643118032610843298655225875571310552543014690878354869257 + u*2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530
	b := E2{
		A0: fp.Element{
			16193900971494954399,
			13995139551301264911,
			9239559758168096094,
			1571199014989505406,
		},
		A1: fp.Element{
			3254114329011132839,
			11171599147282597747,
			10965492220518093659,
			2657556514797346915,
		},
	}
	z.Mul(x, &b)
	return z
}
